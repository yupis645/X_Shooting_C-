#ifndef GAMETEXTUREMANAGER_H
#define GAMETEXTUREMANAGER_H

//-----------------------------------------------------------------------------------------------
//              ゲームで使うTextureを管理するクラス
// 
// pngデータからスライスした画像を保管する。
// mapで管理し、Keyとしてはtypes.hのenum class TextureTypeを使っている
//-----------------------------------------------------------------------------------------------

#include "GameTexture.h"
#include <map>
#include "types.h"

class GameTextureManager {
public:  
    //=======================================================================================
    //                          コンストラクタ
    //=======================================================================================
    GameTextureManager() {}

    //=======================================================================================
    //pngデータとサイズなどの情報を受けとり、画像をスライスしてメンバ変数に格納する
    //=======================================================================================
    bool CreateGameTexture(TextureType type, const std::wstring& ,TextureConfig config);

    //=======================================================================================
    // 任意の GameTexture を描画する共通関数
    //=======================================================================================
    std::shared_ptr<GameTexture> GetTexture(TextureType type);




    //=======================================================================================
    //                          デストラクタ
    //=======================================================================================
    ~GameTextureManager() {}

private: 
    std::map<TextureType, std::shared_ptr<GameTexture>> textures_;      // TextureType をキーにして GameTexture を管理するマップ


};

#endif


